"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/chat";
exports.ids = ["pages/api/chat"];
exports.modules = {

/***/ "langchain/chains":
/*!***********************************!*\
  !*** external "langchain/chains" ***!
  \***********************************/
/***/ ((module) => {

module.exports = import("langchain/chains");;

/***/ }),

/***/ "langchain/embeddings":
/*!***************************************!*\
  !*** external "langchain/embeddings" ***!
  \***************************************/
/***/ ((module) => {

module.exports = import("langchain/embeddings");;

/***/ }),

/***/ "langchain/llms":
/*!*********************************!*\
  !*** external "langchain/llms" ***!
  \*********************************/
/***/ ((module) => {

module.exports = import("langchain/llms");;

/***/ }),

/***/ "langchain/prompts":
/*!************************************!*\
  !*** external "langchain/prompts" ***!
  \************************************/
/***/ ((module) => {

module.exports = import("langchain/prompts");;

/***/ }),

/***/ "langchain/vectorstores":
/*!*****************************************!*\
  !*** external "langchain/vectorstores" ***!
  \*****************************************/
/***/ ((module) => {

module.exports = import("langchain/vectorstores");;

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(api)/./pages/api/chat.ts":
/*!***************************!*\
  !*** ./pages/api/chat.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var langchain_vectorstores__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! langchain/vectorstores */ \"langchain/vectorstores\");\n/* harmony import */ var langchain_embeddings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! langchain/embeddings */ \"langchain/embeddings\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util */ \"(api)/./pages/api/util.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([langchain_vectorstores__WEBPACK_IMPORTED_MODULE_1__, langchain_embeddings__WEBPACK_IMPORTED_MODULE_2__, _util__WEBPACK_IMPORTED_MODULE_3__]);\n([langchain_vectorstores__WEBPACK_IMPORTED_MODULE_1__, langchain_embeddings__WEBPACK_IMPORTED_MODULE_2__, _util__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// Next.js API route support: https://nextjs.org/docs/api-routes/introduction\n\n\n\n\nasync function handler(req, res) {\n    const body = req.body;\n    const dir = path__WEBPACK_IMPORTED_MODULE_0___default().resolve(process.cwd(), \"data\");\n    const vectorstore = await langchain_vectorstores__WEBPACK_IMPORTED_MODULE_1__.HNSWLib.load(dir, new langchain_embeddings__WEBPACK_IMPORTED_MODULE_2__.OpenAIEmbeddings());\n    res.writeHead(200, {\n        \"Content-Type\": \"text/event-stream\",\n        // Important to set no-transform to avoid compression, which will delay\n        // writing response chunks to the client.\n        // See https://github.com/vercel/next.js/issues/9965\n        \"Cache-Control\": \"no-cache, no-transform\",\n        Connection: \"keep-alive\"\n    });\n    const sendData = (data)=>{\n        res.write(`data: ${data}\\n\\n`);\n    };\n    sendData(JSON.stringify({\n        data: \"\"\n    }));\n    const chain = (0,_util__WEBPACK_IMPORTED_MODULE_3__.makeChain)(vectorstore, (token)=>{\n        sendData(JSON.stringify({\n            data: token\n        }));\n    });\n    try {\n        await chain.call({\n            question: body.question,\n            chat_history: body.history\n        });\n    } catch (err) {\n        console.error(err);\n    // Ignore error\n    } finally{\n        sendData(\"[DONE]\");\n        res.end();\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvY2hhdC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSw2RUFBNkU7QUFFckQ7QUFDeUI7QUFDTztBQUNyQjtBQUVwQixlQUFlSSxRQUM1QkMsR0FBbUIsRUFDbkJDLEdBQW9CLEVBQ3BCO0lBQ0EsTUFBTUMsT0FBT0YsSUFBSUUsSUFBSTtJQUNyQixNQUFNQyxNQUFNUixtREFBWSxDQUFDVSxRQUFRQyxHQUFHLElBQUk7SUFFeEMsTUFBTUMsY0FBYyxNQUFNWCxnRUFBWSxDQUFDTyxLQUFLLElBQUlOLGtFQUFnQkE7SUFDaEVJLElBQUlRLFNBQVMsQ0FBQyxLQUFLO1FBQ2pCLGdCQUFnQjtRQUNoQix1RUFBdUU7UUFDdkUseUNBQXlDO1FBQ3pDLG9EQUFvRDtRQUNwRCxpQkFBaUI7UUFDakJDLFlBQVk7SUFDZDtJQUVBLE1BQU1DLFdBQVcsQ0FBQ0MsT0FBaUI7UUFDakNYLElBQUlZLEtBQUssQ0FBQyxDQUFDLE1BQU0sRUFBRUQsS0FBSyxJQUFJLENBQUM7SUFDL0I7SUFFQUQsU0FBU0csS0FBS0MsU0FBUyxDQUFDO1FBQUVILE1BQU07SUFBRztJQUNuQyxNQUFNSSxRQUFRbEIsZ0RBQVNBLENBQUNTLGFBQWEsQ0FBQ1UsUUFBa0I7UUFDdEROLFNBQVNHLEtBQUtDLFNBQVMsQ0FBQztZQUFFSCxNQUFNSztRQUFNO0lBQ3hDO0lBRUEsSUFBSTtRQUNGLE1BQU1ELE1BQU1FLElBQUksQ0FBQztZQUNmQyxVQUFVakIsS0FBS2lCLFFBQVE7WUFDdkJDLGNBQWNsQixLQUFLbUIsT0FBTztRQUM1QjtJQUNGLEVBQUUsT0FBT0MsS0FBSztRQUNaQyxRQUFRQyxLQUFLLENBQUNGO0lBQ2QsZUFBZTtJQUNqQixTQUFVO1FBQ1JYLFNBQVM7UUFDVFYsSUFBSXdCLEdBQUc7SUFDVDtBQUNGLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uYXZhbG1hbmFjLy4vcGFnZXMvYXBpL2NoYXQudHM/YzU3NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBOZXh0LmpzIEFQSSByb3V0ZSBzdXBwb3J0OiBodHRwczovL25leHRqcy5vcmcvZG9jcy9hcGktcm91dGVzL2ludHJvZHVjdGlvblxuaW1wb3J0IHR5cGUgeyBOZXh0QXBpUmVxdWVzdCwgTmV4dEFwaVJlc3BvbnNlIH0gZnJvbSBcIm5leHRcIjtcbmltcG9ydCBwYXRoIGZyb20gXCJwYXRoXCI7XG5pbXBvcnQgeyBITlNXTGliIH0gZnJvbSBcImxhbmdjaGFpbi92ZWN0b3JzdG9yZXNcIjtcbmltcG9ydCB7IE9wZW5BSUVtYmVkZGluZ3MgfSBmcm9tIFwibGFuZ2NoYWluL2VtYmVkZGluZ3NcIjtcbmltcG9ydCB7IG1ha2VDaGFpbiB9IGZyb20gXCIuL3V0aWxcIjtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihcbiAgcmVxOiBOZXh0QXBpUmVxdWVzdCxcbiAgcmVzOiBOZXh0QXBpUmVzcG9uc2Vcbikge1xuICBjb25zdCBib2R5ID0gcmVxLmJvZHk7XG4gIGNvbnN0IGRpciA9IHBhdGgucmVzb2x2ZShwcm9jZXNzLmN3ZCgpLCBcImRhdGFcIik7XG5cbiAgY29uc3QgdmVjdG9yc3RvcmUgPSBhd2FpdCBITlNXTGliLmxvYWQoZGlyLCBuZXcgT3BlbkFJRW1iZWRkaW5ncygpKTtcbiAgcmVzLndyaXRlSGVhZCgyMDAsIHtcbiAgICBcIkNvbnRlbnQtVHlwZVwiOiBcInRleHQvZXZlbnQtc3RyZWFtXCIsXG4gICAgLy8gSW1wb3J0YW50IHRvIHNldCBuby10cmFuc2Zvcm0gdG8gYXZvaWQgY29tcHJlc3Npb24sIHdoaWNoIHdpbGwgZGVsYXlcbiAgICAvLyB3cml0aW5nIHJlc3BvbnNlIGNodW5rcyB0byB0aGUgY2xpZW50LlxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vdmVyY2VsL25leHQuanMvaXNzdWVzLzk5NjVcbiAgICBcIkNhY2hlLUNvbnRyb2xcIjogXCJuby1jYWNoZSwgbm8tdHJhbnNmb3JtXCIsXG4gICAgQ29ubmVjdGlvbjogXCJrZWVwLWFsaXZlXCIsXG4gIH0pO1xuXG4gIGNvbnN0IHNlbmREYXRhID0gKGRhdGE6IHN0cmluZykgPT4ge1xuICAgIHJlcy53cml0ZShgZGF0YTogJHtkYXRhfVxcblxcbmApO1xuICB9O1xuXG4gIHNlbmREYXRhKEpTT04uc3RyaW5naWZ5KHsgZGF0YTogXCJcIiB9KSk7XG4gIGNvbnN0IGNoYWluID0gbWFrZUNoYWluKHZlY3RvcnN0b3JlLCAodG9rZW46IHN0cmluZykgPT4ge1xuICAgIHNlbmREYXRhKEpTT04uc3RyaW5naWZ5KHsgZGF0YTogdG9rZW4gfSkpO1xuICB9KTtcblxuICB0cnkge1xuICAgIGF3YWl0IGNoYWluLmNhbGwoe1xuICAgICAgcXVlc3Rpb246IGJvZHkucXVlc3Rpb24sXG4gICAgICBjaGF0X2hpc3Rvcnk6IGJvZHkuaGlzdG9yeSxcbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgIC8vIElnbm9yZSBlcnJvclxuICB9IGZpbmFsbHkge1xuICAgIHNlbmREYXRhKFwiW0RPTkVdXCIpO1xuICAgIHJlcy5lbmQoKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbInBhdGgiLCJITlNXTGliIiwiT3BlbkFJRW1iZWRkaW5ncyIsIm1ha2VDaGFpbiIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJib2R5IiwiZGlyIiwicmVzb2x2ZSIsInByb2Nlc3MiLCJjd2QiLCJ2ZWN0b3JzdG9yZSIsImxvYWQiLCJ3cml0ZUhlYWQiLCJDb25uZWN0aW9uIiwic2VuZERhdGEiLCJkYXRhIiwid3JpdGUiLCJKU09OIiwic3RyaW5naWZ5IiwiY2hhaW4iLCJ0b2tlbiIsImNhbGwiLCJxdWVzdGlvbiIsImNoYXRfaGlzdG9yeSIsImhpc3RvcnkiLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJlbmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./pages/api/chat.ts\n");

/***/ }),

/***/ "(api)/./pages/api/util.ts":
/*!***************************!*\
  !*** ./pages/api/util.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"OpenAIChatLLMChain\": () => (/* binding */ OpenAIChatLLMChain),\n/* harmony export */   \"makeChain\": () => (/* binding */ makeChain)\n/* harmony export */ });\n/* harmony import */ var langchain_llms__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! langchain/llms */ \"langchain/llms\");\n/* harmony import */ var langchain_chains__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! langchain/chains */ \"langchain/chains\");\n/* harmony import */ var langchain_prompts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! langchain/prompts */ \"langchain/prompts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([langchain_llms__WEBPACK_IMPORTED_MODULE_0__, langchain_chains__WEBPACK_IMPORTED_MODULE_1__, langchain_prompts__WEBPACK_IMPORTED_MODULE_2__]);\n([langchain_llms__WEBPACK_IMPORTED_MODULE_0__, langchain_chains__WEBPACK_IMPORTED_MODULE_1__, langchain_prompts__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst SYSTEM_MESSAGE = langchain_prompts__WEBPACK_IMPORTED_MODULE_2__.PromptTemplate.fromTemplate(`You are an AI assistant for the Mad Creative Inc. Mad Creative Inc is a human-centric design consultancy focusing on digital transformation projects across product design, management and process design. The document you have access to curates Mad thought leadership which spans across human-centric design principles, best practices for digital product design and development, thought leadership for managers, case-studies of our digital product work such as mobile banking applic ations, business to business systems, enterprise software and consumer facing digital projects such as websites.  Mad also writes about new and innovative areas such as artifical intelligence in businesses and process design best practices. \nThe context is between two '========='. Provide conversational answers in Markdown syntax with links formatted as hyperlinks.\nIf the context is empty or you don't know the answer, just tell them that you didn't find anything regarding that topic. Don't try to make up an answer.\nIf the question is not about the Mad insights content, politely inform them that you are tuned to only answer questions about the mad insights content.\n=========\n{context}\n=========`);\nconst QA_PROMPT = langchain_prompts__WEBPACK_IMPORTED_MODULE_2__.PromptTemplate.fromTemplate(`{question}`);\n// VectorDBQAChain is a chain that uses a vector store to find the most similar document to the question\n// and then uses a documents chain to combine all the documents into a single string\n// and then uses a LLMChain to generate the answer\n// Before: Based on the chat history make singular question -> find related docs from the question -> combine docs and insert them as context -> generate answer\n// After: Find related docs from the question -> combine docs and insert them into predefined system message -> pass in the chat history -> generate answer\nclass OpenAIChatLLMChain extends langchain_chains__WEBPACK_IMPORTED_MODULE_1__.LLMChain {\n    async _call(values) {\n        let stop;\n        if (\"stop\" in values && Array.isArray(values.stop)) {\n            stop = values.stop;\n        }\n        const { chat_history  } = values;\n        const prefixMessages = chat_history.map((message)=>{\n            return [\n                {\n                    role: \"user\",\n                    content: message[0]\n                },\n                {\n                    role: \"assistant\",\n                    content: message[1]\n                }\n            ];\n        }).flat();\n        const formattedSystemMessage = await SYSTEM_MESSAGE.format({\n            context: values.context\n        });\n        // @ts-ignore\n        this.llm.prefixMessages = [\n            {\n                role: \"system\",\n                content: formattedSystemMessage\n            },\n            {\n                role: \"assistant\",\n                content: \"Hi, I'm an AI assistant for M\\xe4d Creative Inc. How can I help you?\"\n            },\n            ...prefixMessages\n        ];\n        const formattedString = await this.prompt.format(values);\n        const llmResult = await this.llm.call(formattedString, stop);\n        const result = {\n            [this.outputKey]: llmResult\n        };\n        return result;\n    }\n}\nclass ChatStuffDocumentsChain extends langchain_chains__WEBPACK_IMPORTED_MODULE_1__.StuffDocumentsChain {\n    async _call(values) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Document key ${this.inputKey} not found.`);\n        }\n        const { [this.inputKey]: docs , ...rest } = values;\n        const texts = docs.map(({ pageContent  })=>pageContent);\n        const text = texts.join(\"\\n\\n\");\n        const result = await this.llmChain.call({\n            ...rest,\n            [this.documentVariableName]: text\n        });\n        return result;\n    }\n}\nclass OpenAIChatVectorDBQAChain extends langchain_chains__WEBPACK_IMPORTED_MODULE_1__.VectorDBQAChain {\n    async _call(values) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Question key ${this.inputKey} not found.`);\n        }\n        const question = values[this.inputKey];\n        const docs = await this.vectorstore.similaritySearch(question, this.k);\n        // all of this just to pass chat history to the LLMChain\n        const inputs = {\n            question,\n            input_documents: docs,\n            chat_history: values.chat_history\n        };\n        const result = await this.combineDocumentsChain.call(inputs);\n        return result;\n    }\n}\n// use this custom qa chain instead of the default one\nconst loadQAChain = (llm, params = {})=>{\n    const { prompt =QA_PROMPT  } = params;\n    const llmChain = new OpenAIChatLLMChain({\n        prompt,\n        llm\n    });\n    const chain = new ChatStuffDocumentsChain({\n        llmChain\n    });\n    return chain;\n};\nconst makeChain = (vectorstore, onTokenStream)=>{\n    const docChain = loadQAChain(new langchain_llms__WEBPACK_IMPORTED_MODULE_0__.OpenAIChat({\n        temperature: 0,\n        streaming: Boolean(onTokenStream),\n        callbackManager: {\n            handleNewToken: onTokenStream\n        }\n    }), {\n        prompt: QA_PROMPT\n    });\n    return new OpenAIChatVectorDBQAChain({\n        vectorstore,\n        combineDocumentsChain: docChain,\n        inputKey: \"question\"\n    });\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/util.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/chat.ts"));
module.exports = __webpack_exports__;

})();